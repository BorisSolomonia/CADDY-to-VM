name: deploy-caddy

on:
  push:
    branches: [ master ]
    paths:
      - '~/caddy/**'
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Verify required inputs exist (prints friendly errors)
      - name: Guard variables and secrets
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_SSH_USER: ${{ secrets.VM_SSH_USER }}
          VM_SSH_KEY: ${{ secrets.VM_SSH_KEY }}
        run: |
          set -e
          [ -n "$VM_HOST" ] || { echo "::error::Missing repo variable VM_HOST"; exit 1; }
          [ -n "$VM_SSH_USER" ] || { echo "::error::Missing repo variable VM_SSH_USER"; exit 1; }
          [ -n "$VM_SSH_KEY" ] || { echo "::error::Missing repo secret VM_SSH_KEY"; exit 1; }
          echo "Using VM_HOST=$VM_HOST"
          echo "Using VM_SSH_USER=$VM_SSH_USER"

      # Avoid interactive host-key prompt
      - name: Add host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.VM_HOST }}" >> ~/.ssh/known_hosts 2>/dev/null
          echo "Known hosts updated."

      # Copy only the contents of infra/caddy/ into ~/caddy on the VM
      - name: Copy Caddy files (SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: 22
          source: infra/caddy/*
          target: /home/${{ secrets.VM_SSH_USER }}/caddy
          overwrite: true
          strip_components: 2
          timeout: 30s
          command_timeout: 10m

      # Validate Caddyfile before touching running services
      - name: Validate Caddyfile
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -e
            TARGET_DIR="/home/${{ secrets.VM_SSH_USER }}/caddy"
            echo "Listing $TARGET_DIR"
            ls -la "$TARGET_DIR" || true
            [ -f "$TARGET_DIR/Caddyfile" ] || { echo "Caddyfile missing at $TARGET_DIR/Caddyfile"; exit 1; }
            echo "Validating Caddyfile..."
            docker run --rm -v "$TARGET_DIR/Caddyfile:/etc/caddy/Caddyfile:ro" caddy:2 \
              caddy validate --config /etc/caddy/Caddyfile
            echo "Caddyfile validation OK."

      # Start/Reload Caddy with docker compose, print status and logs
      - name: Start or reload Caddy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -e
            TARGET_DIR="/home/${{ secrets.VM_SSH_USER }}/caddy"

            echo "Docker versions:"
            docker --version
            docker compose version

            echo "Ensuring docker network 'web' exists"
            docker network create web 2>/dev/null || true

            echo "Bringing up Caddy stack"
            cd "$TARGET_DIR"
            docker compose up -d

            echo "Compose services:"
            docker compose ps

            echo "Reloading Caddy (non-fatal if not already running)"
            docker compose exec caddy caddy reload --config /etc/caddy/Caddyfile || true

            echo "Recent Caddy logs:"
            docker compose logs --tail=100 caddy || true

            echo "Local health checks:"
            curl -I --max-time 10 http://127.0.0.1/ || true
            curl -I -k --max-time 10 https://127.0.0.1/ || true
            echo "Done."





# name: deploy-caddy
# on:
#   push:
#     paths:
#       - 'infra/caddy/**'
#     branches: [ master ]
#   workflow_dispatch: {}

# env:
#   VM_HOST:     ${{ vars.VM_HOST }}       # 35.225.153.97
#   VM_SSH_USER: ${{ vars.VM_SSH_USER }}   # e.g. borissolomonia

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Copy caddy files
#         uses: appleboy/scp-action@v0.1.7
#         with:
#           host: "35.225.153.97"
#           username: "borissolomonia"
#           key: ${{ secrets.VM_SSH_KEY }}
#           source: "caddy/*"
#           target: "~/caddy"
#           overwrite: true
#           strip_components: 1

#       - name: Bring up Caddy and reload
#         uses: appleboy/ssh-action@v1.0.3
#         with:
#           host: "35.225.153.97"
#           username: "borissolomonia"
#           key: ${{secrets.VM_SSH_KEY}}
#           script: |
#             set -euo pipefail
#             sudo docker network create web 2>/dev/null || true
#             cd ~/caddy
#             sudo docker compose up -d
#             # wait for caddy to start
#             sleep 5
#             # if already running, just reload config
#             sudo docker compose exec caddy caddy reload --config /etc/caddy/Caddyfile || true
#             # test health endpoint
#             curl -fsS http://127.0.0.1/health || echo "Health check failed, but deployment completed"
